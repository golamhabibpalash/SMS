@model SMS.App.ViewModels.ExamVM.AcademicExamGroupIndexVM


@{
    if (ViewBag.IsLoading == null)
    {
        ViewBag.IsLoading = false;
    }


}

@section Styles{
    <style>
        .loading-container
        {
            display: flex;
            justify-content: center;
            align-items: center;
            position: fixed;
            top: 0;
            left: 0;
            width: 100%;
            height: 100%;
            min-height: 700px;
            background-color: rgba(255, 255, 255, 0.8);
            z-index: 9999;
            display: none;
        }

        .loadingimage img
        {
            max-width: 50%;
            max-height: 50%;
        }
    </style>
}
@if (Model != null)
{
    int exSl = 0;

    <h3>@Model.ExamGroupName</h3>
    <div class="bg-secondary">

        @foreach (var exam in Model.AcademicExams.GroupBy(s => s.AcademicExamGroup.ExamGroupName))
        {

            foreach (var item in exam.GroupBy(s => s.AcademicClass.Name).OrderBy(s => s.Min(m => m.AcademicClassId)))
            {
                <div class="bg-secondary p-2">
                    <div class="card">
                        <table class="table table-striped table-bordered table-sm">
                            <thead>
                                <tr class="bg-info">
                                    <td colspan="7">
                                        <div class="d-flex justify-content-between text-light">
                                            <div>
                                                <h5> @item.Key (Total Exam/s - @item.Count())</h5>
                                            </div>
                                            <div>
                                                <form asp-controller="ExamResults" asp-action="ProcessResult" method="post">
                                                    <input type="hidden" name="classId" value="@item.Select(s => s.AcademicClassId).FirstOrDefault()" />
                                                    <input type="hidden" name="groupId" value="@item.Select(s => s.AcademicExamGroupId).FirstOrDefault()" />
                                                    <input class="scrollPosition" type="hidden" name="scrollPosition" value="0" />
                                                    <button class="btn-sm btn-round btn-group-sm btn-success processResultBtn" data-classId="@item.Select(s => s.AcademicClassId).FirstOrDefault()" data-groupId="@item.Select(s => s.AcademicExamGroupId).FirstOrDefault()" onclick="reloadData()">Process Result</button>
                                                </form>

                                                <form asp-controller="ExamResults" asp-action="DeleteResult" method="post">
                                                    <input type="hidden" name="classId" value="@item.Select(s => s.AcademicClassId).FirstOrDefault()" />
                                                    <input type="hidden" name="groupId" value="@item.Select(s => s.AcademicExamGroupId).FirstOrDefault()" />
                                                    <input class="scrollPosition" type="hidden" name="scrollPosition" value="0" />

                                                    <button class="btn-sm btn-round btn-group-sm btn-danger deleteResultBtn" onclick="return confirm('Are you sure you want to submit this form?')">Delete Result</button>
                                                </form>
                                            </div>
                                        </div>
                                    </td>
                                </tr>
                                <tr class="table-info">
                                    <th>#</th>
                                    <th>Academic Subject</th>
                                    <th>Section</th>
                                    <th>Class Teacher</th>
                                    <th>Total Students</th>
                                    <th>Total Marks</th>
                                    <th>Lock</th>
                                </tr>
                                @foreach (var item2 in item)
                                {
                                    <tr>
                                        <td>@(++exSl)</td>
                                        <td class="w-25">@item2.AcademicSubject.SubjectName</td>
                                        <td>
                                            @if (item2.AcademicSection == null)
                                            {
                                                <span>All</span>
                                            }
                                            else
                                            {
                                                @item2.AcademicSection.Name
                                            }
                                        </td>
                                        <td>@item2.Employee.EmployeeName</td>
                                        <td>@item2.AcademicExamDetails.Count</td>
                                        <td>@item2.TotalMarks</td>
                                        <td>@item2.Status</td>
                                    </tr>
                                }
                            </thead>
                        </table>
                    </div>

                </div>

                exSl++;
            }
        }
    </div><br />
    <a asp-action="Index" class="btn btn-sm btn-info">Back to List</a>
}

<div id="loadingContainer" class="loading-container" @*@(ViewBag.IsLoading ? "style='display:block;'" : "style='display:none;'")*@>
    <div id="loadingImage" class="loadingImage text-center" style="display: block; margin-top:20%; text-align:center;vertical-align:central">
        <img style="width:25%;" src="~/Images/loading1.gif" alt="Loading..." />
    </div>
</div>

@section Scripts{

    <script src="~/js/AlertifyNotify/AlertifyNofify.js"></script>
    <script>
        const confirmAction = (text) => {
            const response = confirm(text);
            if (response) {
                reloadData()
            } else {
                
            }
        }
        function showLoadingImage() {
            document.getElementById("loadingImage").style.display = "block";
            $("#loadingContainer").fadeIn(200);
            document.getElementById("myTable").style.display = "none";
        }

        function hideLoadingImage() {
            document.getElementById("loadingImage").style.display = "none";
            $("#loadingContainer").fadeOut(200);
            document.getElementById("myTable").style.display = "block";
        }
        function deleteBtnClick() {

            reloadData();
        }
        function reloadData() {
            var scrollPosition = window.scrollY;
            var scrollPositionButtons = document.querySelectorAll('.scrollPosition');
            scrollPositionButtons.forEach(function (button) {
                button.value = scrollPosition;
            });
            showLoadingImage();
            // Perform your data reloading here
            if (dataLoaded) {
                hideLoadingImage();
            }
        }
        var scrollPosition = @ViewBag.ScrollPosition!=null?  @ViewBag.ScrollPosition:0; // Default to 0 if not set
        window.scrollTo(0, scrollPosition);

    </script>
    <script>
        // Call the functions based on your conditions
        window.onload = function () {
            var processButtons = document.querySelectorAll('.processResultBtn');
            processButtons.forEach(function (button) {
                var classId = button.getAttribute('data-classId');
                var groupId = button.getAttribute('data-groupId');

                $.ajax({
                    url: '/ExamResults/IsResultProcessed',
                    data: { groupId: groupId, classId: classId },
                    cache: false,
                    type: 'POST',
                    dataType: 'json',
                    success: function (d) {
                        if (d) {
                            button.style.display = 'none';

                            var formElement = button.closest('form');

                            var nextForm = formElement.nextElementSibling;

                            if (nextForm) {
                                // Find the "Delete Result" button within the next form
                                var deleteResultBtn = nextForm.querySelector('.deleteResultBtn');

                                if (deleteResultBtn) {
                                    // Set the display property of the 'deleteResultBtn' to 'none'
                                    deleteResultBtn.style.display = 'block';
                                }
                            }

                        }
                        else {
                            button.style.display = 'block';

                            var formElement = button.closest('form');

                            var nextForm = formElement.nextElementSibling;

                            if (nextForm) {
                                // Find the "Delete Result" button within the next form
                                var deleteResultBtn = nextForm.querySelector('.deleteResultBtn');

                                if (deleteResultBtn) {
                                    // Set the display property of the 'deleteResultBtn' to 'none'
                                    deleteResultBtn.style.display = 'none';
                                }
                            }
                           }
                     },
                    error: function (err) {
                        console.log(err);
                    }
                    });
        });

            };
    </script>
}