@model IEnumerable<OffDay>

@inject UserManager<ApplicationUser> _userManager;

@{
    ViewData["Title"] = "Holidays";
    GlobalUI.PageTitle = ViewData["Title"].ToString();

    int sl = 0;
    System.Text.StringBuilder CreatedBy = new System.Text.StringBuilder();
    System.Text.StringBuilder UpdatedBy = new System.Text.StringBuilder();
}

<div class="row">
    <table class="table table-bordered table-striped table-responsive-sm" id="myTable">
        <thead>
            <tr>
                <td>#</td>
                <td>Name</td>
                <td>Start Date</td>
                <td>End Date</td>
                <td>Total Days</td>
                <td>Description</td>
                <td>Created / Updated by</td>
                <td>
                    <a asp-action="Create" asp-controller="OffDays" class="btn btn-info btn-sm">Add Holiday</a>
                </td>
            </tr>
        </thead>
        <tbody>
            @if (Model.Count() > 0 || Model != null)
            {
                foreach (var item in Model.OrderByDescending(m => m.OffDayStartingDate))
                {
                    <tr>
                        <td>@(++sl).</td>
                        <td>@item.OffDayName</td>
                        <td>@item.OffDayStartingDate.ToString("dd MMM yyyy")</td>
                        <td>@item.OffDayEndDate.ToString("dd MMM yyyy")</td>
                        <td>@item.TotalDays</td>
                        <td>@item.Description</td>
                        @{
                            ApplicationUser aUser = await _userManager.FindByIdAsync(item.CreatedBy);
                            if (aUser != null)
                            {
                                CreatedBy.Clear();
                                CreatedBy.Append(aUser.UserName);
                            }
                            @if (item.EditedBy != null)
                            {
                                aUser = await _userManager.FindByIdAsync(item.EditedBy);
                                UpdatedBy.Clear();
                                UpdatedBy.Append(aUser.UserName);
                            }
                        }
                        <td>
                            @CreatedBy
                        @if (!string.IsNullOrEmpty(UpdatedBy.ToString()))
                        {
                        <span>/ @UpdatedBy</span>
                        @UpdatedBy.Clear();
                    }
                        </td>
                        <td>
                            <partial name="_Edit_Details_Delete" model="@item.Id" />
                        </td>
                    </tr>
                }
            }
        </tbody>
    </table>
</div>

@section Scripts{

    <script src="~/js/AlertifyNotify/AlertifyNofify.js"></script>
    <script>
    $(function () {
        let saved = '@TempData["created"]';
        let deleted = '@TempData["deleted"]';
        let edited = '@TempData["updated"]';
        let failed = '@TempData["failed"]';

        if (saved != "") {
            alertify.success("Saved Successfully");
        };

        if (deleted != "") {
            alertify.error("Deleted Successfully");
        }

        if (edited != "") {
            alertify.message('Updated Successfully');
        }

        if (failed != "") {
            alertify.error(failed);
        }
    });
    </script>

}