@model SMS.App.ViewModels.ModuleSubModuleVM.ProjectModuleVM

@inject UserManager<ApplicationUser> _userManager;
@{
    int sl = 0;
    string createdBy = string.Empty;
}

<div class="row">
    <div class="col-md-4">
        <div class="p-2 rounded rounded-2 alert-info" id="projectModuleCreateUpdateForm">
            <fieldset class="border p-3 shadow">
                <legend class="text-light" style="width:inherit" id="create_update_title_id">Create Project Module</legend>
                <form asp-action="Create" method="post" id="createUpdateForm">
                    <input type="hidden" asp-for="ProjectModule.Id" />
                    <div class="form-group row">
                        <label asp-for="ProjectModule.ModuleName" class="col-sm-3 col-form-label text-right text-sm-left"></label>
                        <div class="col-sm-9">
                            <input asp-for="ProjectModule.ModuleName" class="form-control" placeholder="Module Name">
                            <span asp-validation-for="ProjectModule.ModuleName"></span>
                        </div>
                    </div>
                    <div class="form-group row">
                        <label asp-for="ProjectModule.Remarks" class="col-sm-3 col-form-label text-right text-sm-left"></label>
                        <div class="col-sm-9">
                            <input asp-for="ProjectModule.Remarks" class="form-control" placeholder="Description">
                        </div>
                    </div>
                    <div class="form-group row">
                        <div class="col-sm-6 offset-sm-3">
                            <input asp-for="ProjectModule.Status" value="">
                            <label asp-for="ProjectModule.Status" class="col-form-label"></label>
                        </div>
                    </div>

                    <div class="form-group row">
                        <div class="col-sm-10 text-right">
                            <input type="submit" class="btn btn-primary" id="submitId" value="Create" />
                        </div>
                    </div>
                </form>
            </fieldset>

        </div>
    </div>
    <div class="col-md-8">
        <table class="table table-responsive-sm table-striped rounded rounded-2">
            <thead class="table-info">
                <tr>
                    <th>#</th>
                    <th>Module Name</th>
                    <th>Status</th>
                    <th>Remarks</th>
                    <th>Created By</th>
                    <th>Action</th>
                </tr>
            </thead>
            <tbody>
                @if (Model.ProjectModuleList != null && Model.ProjectModuleList.Count > 0)
                {
                    foreach (var item in Model.ProjectModuleList)
                    {
                        <tr>
                            <td>@(++sl)</td>
                            <td>@item.ModuleName</td>
                            <td>@item.Status</td>
                            <td>@item.Remarks</td>
                            <td>
                                @if (item.CreatedBy != null)
                                {
                                    ApplicationUser aUser = await _userManager.FindByIdAsync(item.CreatedBy);
                                    createdBy = aUser.UserName;
                                }
                                else
                                {
                                    createdBy = "N/F";
                                }
                                <span>@createdBy</span>
                            </td>
                            <td class="d-flex">
                                <button class="btn btn-sm btn-warning updateBtn" data-moduleId="@item.Id" data-remarks="@item.Remarks" data-status="@item.Status" data-moduleName="@item.ModuleName">Edit</button>
                                <form id="delete" asp-action="Delete" method="post">
                                    <input type="hidden" asp-for="ProjectModule.Id" value="@item.Id" />
                                    <input type="hidden" asp-for="ProjectModule.ModuleName" value="@item.ModuleName" />
                                    <input type="hidden" asp-for="ProjectModule.Remarks" value="@item.Remarks" />
                                    <input type="hidden" asp-for="ProjectModule.Status" value="@item.Status" />
                                    <input type="submit" class="btn btn-danger btn-sm" value="x" id="deleteBtnId" />
                                </form>
                            </td>
                        </tr>
                    }
                }
                else
                {
                    <tr></tr>
                }
            </tbody>
        </table>
    </div>
</div>

<partial name="_LastUpdated" />

@section Scripts{ 
    <script>

        $('#submitId').click(function () {
            var isChecked = $('#ProjectModule_Status').is(':checked');
            if (isChecked) {
                $('#ProjectModule_Status').val(isChecked);
            }
            else {

            }
        })
        // Add a click event listener to the button
        $(".updateBtn").click(function () {
            let form = document.getElementById('createUpdateForm');
            form.action = "/ProjectModules/Edit";
            document.getElementById('projectModuleCreateUpdateForm').style.backgroundColor = '#2A3F54'; /*'#f7cc93';*/

            var fieldSet = document.getElementById('projectModuleCreateUpdateForm');
            fieldSet.classList.remove('border-primary');


            var legendData = document.getElementById('create_update_title_id');
            legendData.innerText = "Update Project Module";
            legendData.classList.remove('text-primary');

            document.getElementById('create_update_title_id').style.color = "#fff";

            document.getElementById('projectModuleCreateUpdateForm').style.color = '#fff';
            document.getElementById('submitId').value = 'Update';

            //let rDoc = document.getElementById('SFAllocation_FeeAllocationApplication');

            var moduleId = $(this).data("moduleid");
            var moduleName = $(this).data("modulename");
            var remarks = $(this).data("remarks");
            var status = $(this).data("status");

            $("#ProjectModule_Id").val(moduleId);
            $("#ProjectModule_ModuleName").val(moduleName);
            $('#ProjectModule_Remarks').val(remarks);
            $('#ProjectModule_Status').val(status);
            if (status=='True') {
                $('#ProjectModule_Status').prop("checked", true);
            }
            else {
                $('#ProjectModule_Status').prop("checked", false);
            }
        });

        $(function () {
            $('form#delete').submit(function () {
                var c = confirm("Click OK to continue?");
                return c;
            });
        });
    </script>
}