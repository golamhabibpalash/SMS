@model IEnumerable<SMS.App.ViewModels.ExamResult.ExaminationResultVM>
@using System.Globalization;
@{
    int sl = 0;
    bool isHeader = false;
    List<string> subjectNames = new List<string>();
    if (Model != null)
    {
        subjectNames = Model
                    .SelectMany(result => result.ExaminationResultDetailsVMs.Select(detail => detail.SubjectName))
                    .Distinct()
                    .ToList();
    }
    //bool isImrove = true;
    string studentNameTitleCase = string.Empty;
}
@section Styles{
    <style>
        .loading-container
        {
            display: flex;
            justify-content: center;
            align-items: center;
            position: fixed;
            top: 0;
            left: 0;
            width: 100%;
            height: 100%;
            min-height: 700px;
            background-color: rgba(255, 255, 255, 0.8);
            z-index: 9999;
            display: none;
        }

        .loadingimage img
        {
            max-width: 50%;
            max-height: 50%;
        }
    </style>
}
<div class="row">
    <div class="col-md-12">
        <form asp-action="ClassWiseResult" asp-controller="ExamResults" method="post">
            <div class="form-row">
                <div class="col-md-2">
                    <select class="form-control" asp-items="ViewBag.ExamGroupList" name="examGroupId" id="examGroupId">
                        <option selected disabled>Select Exam Group</option>
                    </select>
                </div>
                <div class="col-md-2">
                    <select class="form-control" asp-items="ViewBag.AcademicClassList" name="classId" id="AcademicClassId">
                        <option selected disabled>Select Academic Class</option>
                    </select>
                </div>
                <div>
                    <input type="submit" class="btn btn-info btn-sm" value="Search" onclick="reloadData()">
                </div>
                <div>
                    @if (ViewBag.IsLoading == true)
                    {
                        <a style="display:none" class="btn btn-sm btn-success processResultBtn" asp-controller="ExamResults" asp-action="ProcessResult" asp-route-classId="ViewBag.classId" data-classId="ViewBag.classId" asp-route-groupId="ViewBag.examGroupId" data-groupId="ViewBag.examGroupId" onclick="reloadData()">Process Result</a>

                        <a style="display:none" class="btn btn-sm btn-danger deleteResultBtn" asp-controller="ExamResults" asp-action="DeleteResult" asp-route-classId="ViewBag.classId" data-classId="ViewBag.classId" asp-route-groupId="ViewBag.examGroupId" data-groupId="ViewBag.examGroupId" onclick="reloadData()">Delete Result</a>
                    }
                </div>
            </div>
        </form>
    </div>
</div>
<div class="row">
    <div class="col-md-12">
        @if (Model != null)
        {
            <table class="table table-responsive table-hover table-bordered" id="myTable">
                <thead>
                    <tr>
                        <th id="headerTh">
                            <div class="col-md-4 text-md-right">
                                <img src="~/Images/Institute/@ViewBag.logo" alt="Alternate Text" style="max-width:100px;" />
                            </div>
                            <div class="col-md-8">
                                <h3 class="h3 font-weight-bolder"> @ViewBag.InstituteName</h3>
                                <h6>@ViewBag.ExamGroupName</h6>
                                <h5>@ViewBag.academicClassName</h5>
                            </div>

                        </th>
                    </tr>
                </thead>
                <tbody>
                    @foreach (var exam in Model)
                    {
                        @if (!isHeader)
                        {
                            <tr class="table-info align-middle" id="headerTr">
                                <th class="align-middle">#</th>
                                <th class="align-middle">Class Roll</th>
                                <th class="align-middle">Student Name</th>
                                @foreach (var exDetail in exam.ExaminationResultDetailsVMs)
                                {
                                    <th class="p-0 m-0">
                                        <table class="w-100">
                                            <tr>
                                                <td colspan="3" class="text-nowrap text-center">@exDetail.SubjectName <br />(Highest @exDetail.HighestObtainMark of @exDetail.ExamMarks)</td>
                                            </tr>
                                            <tr>
                                                <td>Marks</td>
                                                <td>GPA</td>
                                                <td>Grade</td>
                                            </tr>
                                        </table>
                                    </th>
                                }
                                <th class="align-middle">Total Marks   </th>
                                <th class="align-middle">CGPA  </th>
                                <th class="align-middle">Grade  </th>
                                <th class="align-middle">Status  </th>
                                <th class="align-middle">Fail/s  </th>
                                <th class="align-middle">Attendance %  </th>
                                <th class="align-middle">Rank  </th>
                                <th class="align-middle">Previous Rank  </th>
                                <th class="align-middle">Gender  </th>
                                <th class="align-middle">Phone 1 </th>
                                <th class="align-middle">Phone 2 </th>
                            </tr>
                        }
                        <tr class="align-middle text-center">
                            <td>@(++sl).</td>
                            <td> @exam.ClassRoll </td>
                            @{
                                TextInfo textInfo = new CultureInfo("en-US", false).TextInfo;
                                studentNameTitleCase = textInfo.ToTitleCase(exam.StudentName);
                            }
                            <td class="text-nowrap text-left">@studentNameTitleCase</td>

                            @if (exam.ExaminationResultDetailsVMs != null)
                            {
                                foreach (var exDetail in exam.ExaminationResultDetailsVMs)
                                {
                                    <td class="p-0 m-0 align-bottom parentTd">
                                        <table class="w-100 h-100 innerTable">
                                            <tr>
                                                <td style="width: 35%; height: 60px;" class="childTd border-0">@exDetail.ObtainMarks</td>
                                                <td style="width: 33%; height: 60px;" class="childTd border-0">@exDetail.ObtainPoint</td>
                                                <td style="width: 32%; height: 60px;" class="childTd border-0">@exDetail.ObtainGrade</td>
                                            </tr>
                                        </table>
                                    </td>
                                }
                            }
                            <td>@exam.TotalMarks</td>
                            <td>@exam.CGPA.ToString("0.00")</td>
                            <td>@exam.Grade</td>
                            <td>@exam.GradeComment</td>
                            <td>@exam.FailSubCount</td>
                            <td>@exam.AttendancePercent</td>

                            <td>
                                @exam.Rank
                                @if (exam.Rank < exam.PreviousMonthRank)
                                {
                                    <i class="fas fa-level-up text-success"></i>
                                }
                                else
                                {
                                    <i class="fas fa-level-down text-warning"></i>
                                }
                            </td>
                            <td>@exam.PreviousMonthRank</td>
                            <td class="align-middle">@exam.Gender.Name</td>
                            <td class="align-middle">
                                @exam.Phone1
                            </td>
                            <td class="align-middle">
                                @exam.Phone2
                            </td>
                        </tr>

                        isHeader = true;
                    }
                </tbody>
                <tfoot>

                </tfoot>
            </table>
        }

    </div>
</div>


<div id="loadingContainer" class="loading-container" @(ViewBag.IsLoading ? "style='display:block;'" : "style='display:none;'")>
    <div id="loadingImage" class="loadingImage text-center" style="display: none; margin-top:20%; text-align:center;vertical-align:central">
        <img style="width:25%;" src="~/Images/loading1.gif" alt="Loading..." />
    </div>
</div>

@section Scripts{


    <script>

        let dataLoaded = false;
        $(document).on("dataLoaded", function () {
            // Set the flag variable to true.
            dataLoaded = true;
        });

        function showLoadingImage() {
            document.getElementById("loadingImage").style.display = "block";
            $("#loadingContainer").fadeIn(200);
            document.getElementById("myTable").style.display = "none";
        }

        function hideLoadingImage() {
            document.getElementById("loadingImage").style.display = "none";
            $("#loadingContainer").fadeOut(200);
            document.getElementById("myTable").style.display = "block";
        }

        // Example function to simulate data reloading
        function reloadData() {
            showLoadingImage();
            // Perform your data reloading here
            if (dataLoaded) {
                hideLoadingImage();
            }
        }
    </script>
    <script>
        // Wait for the DOM to be fully loaded
        document.addEventListener("DOMContentLoaded", function () {

            //Code for Table Header/Heading
            // Get the <th> and <tr> elements
            var headerTh = document.getElementById("headerTh");
            var headerTr = document.getElementById("headerTr");

            // Calculate the number of <td> elements
            var tdCount = headerTr.getElementsByTagName("td").length;

            // Set the rowspan attribute of <th>
            headerTh.setAttribute("colspan", tdCount);



            // Get the <td> elements within the table
            var tdElements = document.querySelectorAll("#myTable td");

            // Iterate through each <td> element
            tdElements.forEach(function (td) {
                // Check if inner text is 'F'
                if (td.innerText.trim() === "F") {
                    // Set background color to 'salmon'
                    td.style.backgroundColor = "salmon";
                }
            });
        });

        $(document).ready(function () {
            $('#examGroupId').change(function () {
                let id = $('#examGroupId option:selected').val();
                $.ajax({
                    url: "/AcademicExams/GetAcademicClassByExamGrId?examGroupId=" + id,
                    dataType: "JSON",
                    type: "POST",
                    cache: false,
                    success: function (data) {
                        $('#AcademicClassId').empty();
                        var o = '<option disabled selected>Select Class</option>';
                        $('#AcademicClassId').append(o);
                        $.each(data, function (i, obj) {
                            console.log(obj.name);
                            var op = '<option value="' + obj.id + '">' + obj.name + '</option>';
                            $('#AcademicClassId').append(op);
                        });
                    },
                    error: function (err) {
                        console.log(err);
                    }
                });
            });
        });
    </script>

    <script>
        // Call the functions based on your conditions
        window.onload = function () {
            var processButtons = document.querySelectorAll('.processResultBtn');
            processButtons.forEach(function (button) {
                var classId = button.getAttribute('data-classId');
                var groupId = button.getAttribute('data-groupId');

                $.ajax({
                    url: '/ExamResults/IsResultProcessed',
                    data: { groupId: groupId, classId: classId },
                    cache: false,
                    type: 'POST',
                    dataType: 'json',
                    success: function (d) {
                        if (d) {
                            button.style.display = 'none';
                            var otherBtn = button.nextElementSibling;
                            otherBtn.style.display = 'block';
                        }
                        else {
                            button.style.display = 'block';
                            var otherBtn = button.nextElementSibling;
                            otherBtn.style.display = 'none';
                        }
                    },
                    error: function (err) {
                        console.log(err);
                    }
                });
            });

        };
    </script>
}