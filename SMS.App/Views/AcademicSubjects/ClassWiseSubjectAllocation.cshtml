@model SMS.App.ViewModels.AcademicVM.AcademicClassSubjectAllocationVM
@inject UserManager<ApplicationUser> _userManager;
@{
    int sl = 0;
    string createdBy = string.Empty;
    string updateBy = string.Empty;
}
<div class="row">
    @if (Model.academicClassSubjects.Any())
    {
        <div class="col-md-12">
            <table class="table table-striped table-responsive-sm">
                <thead class=" table-primary">
                    <tr>
                        <td>#</td>
                        <td>Subject Code</td>
                        <td>Subject Name</td>
                        <td>Academic Class</td>
                        <td>Status</td>
                        <td>Make By</td>
                        <td>Update By</td>
                        <td class="p-0 pt-1">
                            <button class="btn btn-primary btn-sm addNewBtn" data-toggle="modal" data-target=".bd-example-modal-lg" onclick="refreshModel()">Add New Allocation</button>
                        </td>
                    </tr>
                </thead>
                <tbody>
                    @foreach (var item in Model.academicClassSubjects.OrderBy(s => s.AcademicClassId))
                    {
                        ApplicationUser aUser = await _userManager.FindByIdAsync(item.CreatedBy);
                        if (aUser!=null)
                        {
                            createdBy = aUser.UserName;
                        }
                        ApplicationUser editUser = await _userManager.FindByIdAsync(item.EditedBy);
                        if (editUser != null)
                        {
                            updateBy = editUser.UserName;
                        }
                        <tr>
                            <td>@(++sl)</td>
                            <td>@item.AcademicSubject.SubjectCode</td>
                            <td>@item.AcademicSubject.SubjectName</td>
                            <td>@item.AcademicClass.Name</td>
                            <td>@item.Status</td>
                            <td>@createdBy</td>
                            <td> @updateBy</td>
                            <td>
                                <a class="btn-sm rounded examEditBtn" data-toggle="modal" data-target=".bd-example-modal-lg" onclick="EditExamClick(@item.Id)">
                                    <i class="fas fa-edit"></i>
                                </a>
                                <a asp-action="ClassWiseSubjectAllocationDelete" asp-controller="AcademicSubjects" asp-route-id="@item.Id" class="btn-sm rounded">
                                    <i class="text-danger fas fa-trash"></i>
                                </a>
                            </td>
                        </tr>
                    }
                </tbody>
            </table>
        </div>
    }
    else
    {
        <div class="col-md-12">
            <div class="jumbotron text-center">
                <button class="btn btn-primary" data-toggle="modal" data-target=".bd-example-modal-lg">Add Subject Allocation with class</button>
            </div>
        </div>
    }
</div>


<div class="modal fade bd-example-modal-lg" tabindex="-1" role="dialog" aria-labelledby="myLargeModalLabel" aria-hidden="true" id="myModal">
    <div class="modal-dialog modal-lg">
        <div class="modal-content">
            <form asp-action="ClassWiseSubjectAllocationCreate" method="post" id="myForm">
                <div class="card rounded">
                    <div class="card-header bg-navy-blue">
                        <h5 id="modalTitle">New Allocation</h5>
                    </div>
                    <div class="card-body pb-0">
                        <div class="form-group row">
                            <label class="col-md-3 text-md-right col-form-label">Academic Class</label>
                            <div class="col-md-9">
                                <select class="form-control" asp-items="ViewBag.classList" asp-for="AcademicClassId">
                                    <option selected disabled value="-1">-Select Class-</option>
                                </select>
                            </div>
                        </div>
                        <div class="form-group row">
                            <label class="col-md-3 text-md-right col-form-label">Academic Subject</label>
                            <div class="col-md-9">
                                <select class="form-control" asp-items="ViewBag.subjectList" asp-for="AcademicSubjectId">
                                    <option selected disabled value="-1">-Select Subject-</option>
                                </select>
                            </div>
                        </div>
                        <div class="form-group row float-right">
                            <span class="btn btn-info btn-sm" id="addBtn" onclick="SubjectAddBtnClick()">Add</span>
                            
                        </div>
                    </div>
                    <div class="card-footer p-0" id="cardFooter">
                        <table class="table table-borderless table-dark table-striped mb-1" id="allocationTable">
                            <thead>
                                <tr>
                                    <td>#</td>
                                    <td>Academic Class</td>
                                    <td>Academic Subject</td>
                                    <td>Status</td>
                                    <td class="text-right">Action</td>
                                </tr>
                            </thead>
                            <tbody id="tableBodyId">
                            </tbody>
                        </table>
                        <div class="text-center text-md-right">
                            <input type="button" class="btn-sm btn-danger" onclick="ClearBtnClicked()" value="Clear" />
                            <button class="btn btn-primary btn-sm">Submit</button>
                        </div>
                    </div>
                </div>
            </form>
        </div>
    </div>
</div>

@section Scripts{
    <script src="~/js/AlertifyNotify/AlertifyNofify.js"></script>

    <script>
        let deleted = '@TempData["deleted"]';
        let created = '@TempData["created"]';
        let updated = '@TempData["updated"]';
        let failed = '@TempData["error"]';

        function refreshModel() {
            let modalFooter = document.getElementById('cardFooter');
            modalFooter.style.display = 'block';

            let modalTitle = document.getElementById('modalTitle');
            modalTitle.innerHTML = "Add New Class-Wise Subject Allocation";

            let addBtn = document.getElementById('addBtn');
            addBtn.style.display = 'block';
        }

        function SubjectAddBtnClick() {
            let isValidate = validateForm();
            if (isValidate) {

                var classIdElement = document.getElementById("AcademicClassId");
                var classIdOption = classIdElement.options[classIdElement.selectedIndex];
                let classId = classIdOption.value;
                let classIdText = classIdOption.text;

                let subjectidElement = document.getElementById('AcademicSubjectId');
                let subjectidOption = subjectidElement.options[subjectidElement.selectedIndex];
                let subjectid = subjectidOption.value;
                let subjectIdText = subjectidOption.text;

                let tableBody = document.getElementById('tableBodyId');
                var indexCount = $("#allocationTable > tbody").children().length;

                let rowCount = indexCount + 1;

                let serial_td = '<td>' + rowCount + '</td>'
                let subject_td = '<td>  <input type="hidden" name="academicClassSubjects[' + indexCount + '].AcademicSubjectId" value="' + subjectid + '" />' + subjectIdText + '</td>';
                let class_td = '<td> <input type="hidden" name="academicClassSubjects[' + indexCount + '].AcademicClassId" value="' + classId + '" />' + classIdText + '</td>';
                let status_td = '<td> <input type="hidden" name="academicClassSubjects[' + indexCount + '].Status" value="' + true + '" />' + true + '</td>';
                let action_td = '<td class="text-right"><button onclick="removeRow(this)" class="removeBtn btn btn-sm btn-warning" value="Remove">x</button></td>';
                let tr = '<tr>' + serial_td + class_td + subject_td + status_td + action_td + '</tr>';
                tableBody.innerHTML += tr;
            }
        }
        function validateForm() {
            let classId = document.getElementById('AcademicClassId').value;
            let subjectid = document.getElementById('AcademicSubjectId').value;


            if (classId <= 0) {
                alert("Please select class");
                document.getElementById('AcademicClassId').focus();
                return false;
            }
            else if (subjectid <= 0) {
                alert("Please select Subject from list");
                document.getElementById('AcademicSubjectId').focus();
                return false;
            }
            return true;
        }

        function removeRow(button) {
            var row = button.parentNode.parentNode;
            row.parentNode.removeChild(row);
        }

        function ClearBtnClicked() {
            $("#allocationTable > tbody").empty();
        }

        //$('#submitBtn').click(function () {
        //    document.getElementById("loading").style.display = "block";
        //    $('#submitForm').submit(function () {
        //        $('#createUpdateModal').modal('hide');
        //        document.getElementById("loading").style.display = "block";
        //        setTimeout(function () {
        //            document.getElementById("myForm").reset();
        //        }, 2000);

        //    });
        //});

        function EditExamClick(id) {
            let modalFooter = document.getElementById('cardFooter');
            modalFooter.style.display = 'none';
            let modalTitle = document.getElementById('modalTitle');
            modalTitle.innerHTML = "Edit Class-Wise Subject Allocation";

            let addBtn = document.getElementById('addBtn');
            addBtn.style.display = 'none';


            let modalUpdateBtn = document.getElementById('updateFormSubmitBtn');
            modalUpdateBtn.style.visibility = 'visible';

        }
    </script>
}