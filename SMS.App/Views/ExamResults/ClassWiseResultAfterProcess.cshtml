@model IEnumerable<ExamResult>

@{
    int sl = 0;
    string trColor = string.Empty;
    List<string> subjectNames = new List<string>();
    if (Model != null)
    {
        subjectNames = Model
                    .SelectMany(result => result.ExamResultDetails.Select(detail => detail.AcademicSubject.SubjectName))
                    .Distinct()
                    .ToList();
    }

    int totalSubject = subjectNames.Count;
}
@section Styles{
    <link href="~/lib/DataTable/css/cdn.datatables.net_buttons_2.0.0_css_buttons.dataTables.min.css" rel="stylesheet" />
    <link href="~/lib/DataTable/css/cdn.datatables.net_1.11.5_css_jquery.dataTables.min.css" rel="stylesheet" />
    <style>
        .dataTables_length, .dataTables_filter
        {
            margin-left: 10px;
            float: right;
        }

        .dt-buttons
        {
            float: right;
        }

        .loading-container
        {
            display: flex;
            justify-content: center;
            align-items: center;
            position: fixed;
            top: 0;
            left: 0;
            width: 100%;
            height: 100%;
            min-height: 700px;
            background-color: rgba(255, 255, 255, 0.8);
            z-index: 9999;
            display: none;
        }

        .loadingimage img
        {
            max-width: 50%;
            max-height: 50%;
        }
    </style>

}
<div class="row">
    <div class="col-md-12">
        <form asp-action="ClassWiseResultAfterProcess" asp-controller="ExamResults" method="post" id="myForm">
            <div class="form-row">
                <div class="col-md-2">
                    <select class="form-control" asp-items="ViewBag.ExamGroupList" name="examGroupId" id="examGroupId">
                        <option selected disabled>Select Exam Group</option>
                    </select>
                </div>
                <div class="col-md-2">
                    <select class="form-control" asp-items="ViewBag.AcademicClassList" name="classId" id="AcademicClassId">
                        <option selected disabled>Select Academic Class</option>
                    </select>
                </div>
                <div>
                    <input type="submit" class="btn btn-info btn-sm" value="Search" onclick="reloadData()">
                </div>
                @if (Model != null)
                {
                    <div>
                        <input type="submit" class="btn btn-danger btn-sm" value="Delete" onclick="deleteBtnClicked()">
                    </div>
                }
            </div>
        </form>
    </div>
</div>


<div id="loadingContainer" class="loading-container" @(ViewBag.IsLoading ? "style='display:block;'" : "style='display:none;'")>
    <div id="loadingImage" class="loadingImage text-center" style="display: none; margin-top:20%; text-align:center;vertical-align:central">
        <img style="width:25%;" src="~/Images/loading1.gif" alt="Loading..." />
    </div>
</div>


@if (Model != null)
{
    <div class="table-responsive">
        <table class="table table-responsive table-bordered" id="myTable">
            <thead>
                <tr>
                    <th class="no-sort" rowspan="2">#</th>
                    <th rowspan="2">Class Roll</th>
                    <th rowspan="2">Name</th>
                    @foreach (var item in subjectNames)
                    {
                        <th colspan="3" class="text-nowrap text-center">@item <br /></th>
                    }
                    <th rowspan="2">Total Marks</th>
                    <th rowspan="2">CGPA</th>
                    <th rowspan="2">Grade</th>
                    <th rowspan="2">Status</th>
                    <th rowspan="2">Total Fail</th>
                    <th rowspan="2">Attendance</th>
                    <th rowspan="2">Rank</th>
                    <th rowspan="2">Previous Rank</th>
                    <th rowspan="2">Gender</th>
                    <th class="no-sort" rowspan="2">Phone 1</th>
                    <th class="no-sort" rowspan="2">Phone 2</th>
                </tr>
                <tr>
                    @foreach (var item in subjectNames)
                    {
                        <th>Mark</th>
                        <th>GPA</th>
                        <th>Grade</th>
                    }
                </tr>
            </thead>
            <tbody>
                @foreach (var exam in Model)
                {
                    @if (exam.CGPA==0)
                    {
                        trColor = "antiquewhite";
                    }
                    else
                    {
                        trColor = string.Empty;
                    }
                <tr style="background-color:@trColor">
                    <td>@(++sl)</td>
                    <td>@exam.Student.ClassRoll</td>
                    <td class="text-nowrap">@exam.Student.Name</td>
                    @if (exam.ExamResultDetails != null)
                    {
                        foreach (var eDetail in exam.ExamResultDetails)
                        {
                            <td>@eDetail.ObtainMark</td>
                            if (@eDetail.GPA == 0)
                            {
                                <td style="background-color:salmon">@eDetail.GPA</td>
                            }
                            else
                            {
                                <td>@eDetail.GPA</td>
                            }
                            <td>@eDetail.Grade</td>
                        }
                    }
                    <td>@exam.TotalObtainMarks</td>
                    <td style="background-color:@trColor">@exam.CGPA</td>
                    <td>@exam.FinalGrade</td>
                    <td>@exam.GradeComments</td>
                    <td>@exam.TotalFails</td>
                    <td>@(exam.AttendancePercentage+"%")</td>
                    <td>@(exam.Rank)</td>
                    <td></td>
                    <td>@exam.Student.Gender.Name</td>
                    <td>
                        @(exam.Student.GuardianPhone != null && exam.Student.GuardianPhone.Trim() != string.Empty
    ? exam.Student.GuardianPhone.ToString().PadLeft(11, '0')
    : "N/A")
                    </td>
                    <td>@exam.Student.PhoneNo.ToString().PadLeft(11, '0')</td>
                </tr>
                        }
                    </tbody>

        </table>

    </div>
}
@section Scripts{
    <script src="~/lib/DataTable/js/jquery-3.7.0.js"></script>
    <script src="~/lib/DataTable/js/jquery.dataTables.min.js"></script>
    <script src="~/lib/DataTable/js/dataTables.buttons.min.js"></script>
    <script src="~/lib/DataTable/js/jszip.min.js"></script>
    <script src="~/lib/DataTable/js/pdfmake.min.js"></script>
    <script src="~/lib/DataTable/js/vfs_fonts.js"></script>
    <script src="~/lib/DataTable/js/buttons.html5.min.js"></script>
    <script>
        $(document).ready(function () {
            $('#myTable').dataTable({
                "lengthMenu": [[25, 50, 100, -1], [25, 50, 100, "All"]],
                "dom": 'lBfrtip',
                'columnDefs': [{
                    'targets': '.no-sort', // column index (start from 0)
                    'orderable': false, // set orderable false for selected columns
                }]
            });

            new $.fn.dataTable.Buttons($('#myTable'), {
                buttons: [
                    {
                        extend: 'copy',
                        exportOptions: {
                            columns: ':not(.action)'
                        }
                    },
                    {
                        extend: 'excel',
                        exportOptions: {
                            columns: ':not(.action)'
                        }
                    },
                    {
                        extend: 'pdf',
                        exportOptions: {
                            columns: ':not(.action)'
                        }
                    },
                    {
                        extend: 'print',
                        exportOptions: {
                            columns: ':not(.action)'
                        }
                    }
                ]
            });
        });

        let dataLoaded = false;
        $(document).on("dataLoaded", function () {
            // Set the flag variable to true.
            dataLoaded = true;
        });

        function deleteBtnClicked() {

            var formElement = document.getElementById('myForm');

            // Check if the form element exists
            if (formElement) {
                // Change the asp-action attribute value to "name2"
                formElement.setAttribute('asp-action', 'DeleteResult');
            }

        }

        function showLoadingImage() {
            document.getElementById("loadingImage").style.display = "block";
            $("#loadingContainer").fadeIn(200);
            document.getElementById("myTable").style.display = "none";

        }

        function hideLoadingImage() {
            document.getElementById("loadingImage").style.display = "none";
            $("#loadingContainer").fadeOut(200);
            document.getElementById("myTable").style.display = "block";
        }

        // Example function to simulate data reloading
        function reloadData() {
            showLoadingImage();
            // Perform your data reloading here
            if (dataLoaded) {
                hideLoadingImage();
            }
        }

        $(document).ready(function () {
            $('#examGroupId').change(function () {
                let id = $('#examGroupId option:selected').val();
                $.ajax({
                    url: "/AcademicExams/GetAcademicClassByExamGrId?examGroupId=" + id,
                    dataType: "JSON",
                    type: "POST",
                    cache: false,
                    success: function (data) {
                        $('#AcademicClassId').empty();
                        var o = '<option disabled selected>Select Class</option>';
                        $('#AcademicClassId').append(o);
                        $.each(data, function (i, obj) {
                            console.log(obj.name);
                            var op = '<option value="' + obj.id + '">' + obj.name + '</option>';
                            $('#AcademicClassId').append(op);
                        });
                    },
                    error: function (err) {
                        console.log(err);
                    }
                });
            });
        });
    </script>
}